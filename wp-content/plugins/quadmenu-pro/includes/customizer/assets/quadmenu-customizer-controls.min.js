
(function(a){a("body").on("check_dependencies", function(c, b){quadmenu.customizer.dependencies(b)}); quadmenu.customizer = quadmenu.customizer || {}; quadmenu.customizer.required = function(){a.each(redux.folds, function(d, c){var b = a("#" + redux.args.opt_name + "-" + d); if (c == "hide"){b.addClass("hide").hide()}})}; quadmenu.customizer.dependencies = function(c){if (redux.required === null){return}var e = a(c), f = e.parents(".redux-field:first").data("id"); if (!redux.required.hasOwnProperty(f)){return}var b = e.parents(".redux-field-container:first"), d = b.parents(".customize-control:first").hasClass("hide"); a.each(redux.required[f], function(k, j){var i = a(this), g = false, h = a("#" + redux.args.opt_name + "-" + k); if (!d){g = a.redux.check_parents_dependencies(k)}if (g === true){h.fadeIn(300, function(){a(this).removeClass("hide"); if (redux.required.hasOwnProperty(k)){quadmenu.customizer.dependencies(a("#" + redux.args.opt_name + "-" + k).children().first())}a.redux.initFields()})}if (g === false){h.fadeOut(100, function(){a(this).addClass("hide"); if (redux.required.hasOwnProperty(k)){a.redux.required_recursive_hide(k)}})}i.find("select, radio, input[type=checkbox]").trigger("change")})}; quadmenu.customizer.init = function(){a(".accordion-section.redux-section, .accordion-section.redux-panel, .accordion-section-title").click(function(){a.redux.initFields()}); redux.args.disable_save_warn = true; console.log("redux_init"); var b = redux_change; redux_change = function(d){d = a(d); b.apply(this, arguments); console.log("redux_change"); quadmenu.customizer.save(d)}; var c = a.redux.initFields; a.redux.initFiles = function(){c()}}; quadmenu.customizer.save = function(c){var b = c.hasClass("redux-field")?c:c.parents(".redux-field-container:first"); quadmenu.customizer.inputSave(b)}; quadmenu.customizer.inputSave = function(f){if (!f.hasClass("redux-field-container")){f = f.parents('[class^="redux-field-container"]')}var d = f.parent().find(".redux-customizer-input") || f.parents(".redux-container-repeater:first").parent().find(".redux-customizer-input"), g = d.data("id"); var b = f.find(":input").serializeJSON(); a.each(b, function(i, h){b = h}); var e = f.parent().find(".redux-customizer-input").data("key"); if (b[e]){b = b[e]}var c = wp.customize.control(g); c.setting._value = null; c.setting.set(b); console.log(b)}; wp.customize.bind("ready", function(){quadmenu.customizer.init(); quadmenu.customizer.required()})})(jQuery);